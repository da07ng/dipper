// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.0beta2/esri/copyright.txt for details.
//>>built
define(["../../core/declare","dojo/_base/lang","./ArcGISMapService","../support/layerUtils","../../core/Accessor"],function(f,g,h,d,k){var l=f(k,{classMetadata:{computed:{layers:["layer.defaultVisibleLayers","layer.visibleLayers"],layerDefs:["layer.layerDefinitions"],layerTimeOptions:["layer.layerTimeOptions"]}},_layerDefsGetter:function(){var a=this.layer.layerDefinitions;return a&&d._serializeLayerDefinitions(a)},_layerTimeOptionsGetter:function(){var a=this.layer.layerTimeOptions;return a&&d._serializeTimeOptions(a)},
_layersGetter:function(){var a=this.layer.visibleLayers,b=this.layer.defaultVisibleLayers;return a&&a!==b?"show:"+a.join(","):null},toJSON:function(){return{dpi:this.layer.dpi,format:this.layer.imageFormat,transparent:this.layer.imageTransparency,gdbVersion:this.layer.gdbVersion||null,layerTimeOptions:this.layerTimeOptions,layers:this.layers,layerDefs:this.layerDefs}}});return f(h,{declaredClass:"esri.layers.mixins.ArcGISDynamicService",classMetadata:{reader:{add:["defaultVisibleLayers","visibleLayers"]},
computed:{visibleLayers:["dynamicLayerInfos"]}},constructor:function(){this._exportImageParameters=new l({layer:this})},_exportImageParameters:null,dpi:96,_defaultVisibleLayersReader:function(a,b){var e=[];b.layers&&b.layers.forEach(function(a){a.defaultVisibility&&e.push(a.id)});return e},dynamicLayerInfos:null,gdbVersion:null,imageFormat:"png8",imageTransparency:!0,layerDefinitions:null,layerDrawingOptions:null,layerTimeOptions:null,visibleLayers:null,_visibleLayersReader:function(a,b){return this._defaultVisibleLayersReader(a,
b)},_visibleLayersGetter:function(a){return this.dynamicLayerInfos?d._getDefaultVisibleLayers(this.dynamicLayerInfos):a},getExportImageParameters:function(a){var b=a.extent,e=a.width,d=a.height,c=b&&b.spatialReference;a=null==a.rotation||0===a.rotation||10.3>this.version?{}:{rotation:-a.rotation};c=c&&(c.wkid||JSON.stringify(c.toJSON()));return g.mixin({bbox:b&&b.xmin+","+b.ymin+","+b.xmax+","+b.ymax,bboxSR:c,imageSR:c,size:e+","+d},a,this._exportImageParameters.toJSON())}})});