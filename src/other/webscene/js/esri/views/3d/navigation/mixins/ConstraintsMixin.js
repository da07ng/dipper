// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.0beta2/esri/copyright.txt for details.
//>>built
define("../../../../core/declare ../../../../core/watchUtils ../../../../geometry/Point ../../support/mathUtils ../../lib/glMatrix ../../constraints/SceneViewAltitudeConstraint ../../webgl-engine/lib/Camera ../../webgl-engine/lib/IntervalUtilities".split(" "),function(z,n,A,p,u,v,w,x){function B(a){return new f.Tilt({min:function(){return 0.01},max:function(){return p.deg2rad(a.tilt.max)}})}function C(a){return new f.Altitude({min:function(){return a.altitude.min},max:function(){return a.altitude.max}})}
var d=u.vec3d,m=u.mat4d,D=new A,k=d.create(),y=d.create(),q=m.create(),r=d.create(),s=d.create(),t=d.create(),E=new w,F=new w,l=d.create(),G={tilt:0,distance:0},H={distance:0,maxFarNearRatio:0},f=z([],{declaredClass:"esri.views.3d.navigation.mixins.ConstraintsMixin",classMetadata:{properties:{userConstraints:{setter:function(a){this._disconnectUserConstraints();this._connectUserConstraints(a);return a}},elevationProvider:{value:null,setter:function(a){null!==this._elevationChangeHandle&&(this._elevationChangeHandle.remove(),
this._elevationChangeHandle=null);null!==this._elevationChangeTileHandle&&(this._elevationChangeTileHandle.remove(),this._elevationChangeTileHandle=null);null!==a&&(this._elevationChangeHandle=a.on("elevation-change",this._elevationChangeHandler.bind(this)),this._elevationChangeTileHandle=a.on("elevation-change-tile",this._elevationChangeTileHandler.bind(this)));return a}},minPoiDist:{getter:function(){return this._minPoiDistInMeters/this.mapUnitInMeters},dependsOn:["mapUnitInMeters"]},cameraElevationMargin:{getter:function(){return this._cameraElevationMarginInMeters/
this.mapUnitInMeters},dependsOn:["mapUnitInMeters"]},minNearDistance:{getter:function(){return this._minNearDistanceInMeters/this.mapUnitInMeters},dependsOn:["mapUnitInMeters"]},constraintsEnabled:{value:!0}}},constructor:function(){this._userConstraints=null;this._userConstraintsHandles=[];this._clipDistanceHandles=[];this._tiltHandles=[];this._altitudeHandles=[];this.constraints={tilt:this.defaultConstraints.tilt,altitude:this.defaultConstraints.altitude,collision:this.defaultConstraints.collision};
this._tiltModeHandler=this._tiltModeHandler.bind(this);this._tiltMaxHandler=this._tiltMaxHandler.bind(this);this._altitudeModeHandler=this._altitudeModeHandler.bind(this);this._altitudeMinMaxHandler=this._altitudeMinMaxHandler.bind(this);this._clipDistanceModeHandler=this._clipDistanceModeHandler.bind(this);this._clipDistanceNearFarHandler=this._clipDistanceNearFarHandler.bind(this);this._collisionEnabledHandler=this._collisionEnabledHandler.bind(this);this.enableElevationUpdates=!0;this._recomputeTargetCenterForElevationChange=
!1;this._terrainElevationAtCameraEye=this._terrainElevationBelowCamera=this._elevationChangeTileHandle=this._elevationChangeHandle=null;this._autoAltitudeConstraints={min:v.MIN_DEFAULT,max:v.MAX_DEFAULT};this.maxFarNearRatio=2E4;this._minNearDistanceInMeters=2;this._minPoiDistInMeters=4;this._cameraElevationMarginInMeters=5},initialize:function(){this._targetCameraBeforeElevationUpdate=this.cameras.current.copy();this._sceneExtentChangeHandle=this.view.watch("fullExtent",function(a){this._updateAltitudeConstraintFromExtent(a);
this._reapplyConstraints();this._camerasChanged()}.bind(this))},_updateAutoAltitudeConstraints:function(a){},updateMapCoordsHelper:function(a,b){this.inherited(arguments);if(!this._userConstraints||"auto"===this._userConstraints.altitude.mode)this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,a.mapUnitInMeters);if(!this._userConstraints||"auto"===this._userConstraints.tilt.mode)this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,a.mapUnitInMeters);this._updateAltitudeConstraintFromExtent(this.view.fullExtent);
this._reapplyConstraints();this._camerasChanged()},_updateAltitudeConstraintFromExtent:function(a){a.spatialReference.equals(this.mapCoordsHelper.spatialReference)&&0<a.xmax-a.xmin&&(this._updateAutoAltitudeConstraints(a),(!this._userConstraints||"auto"===this._userConstraints.altitude.mode)&&this._autoUpdateAltitudeConstraint())},destroy:function(){this._disconnectUserConstraints();this._sceneExtentChangeHandle.remove()},_updateTargetCenterForElevation:function(){if(this.enableElevationUpdates){var a=
this.getCameraIntersectTerrain(this.cameras.target.eye,this.cameras.target.center,this.cameras.target.up,0.02);a&&!a.equals(this.cameras.target)&&this.setCamera(a,{internalUpdate:!0})}},step:function(a){if(!(this.pan&&this.pan.continuous&&this.pan.continuous.active||this.pan.active||this.zoom.active||this.rotate.active)&&this._recomputeTargetCenterForElevationChange){var b=this._targetCameraChangedByElevationUpdate;this._updateTargetCenterForElevation();b&&(this._targetCameraChangedByElevationUpdate=
!0);this._recomputeTargetCenterForElevationChange=!1}this.inherited(arguments)},applyConstraints:function(a,b){if(!this.constraintsEnabled)return!1;var c=this._cameraElevationAngle(a,G),h=this.constraints.tilt.min(c.distance),e=this.constraints.tilt.max(c.distance),g=0;!b&&c.tilt>e?g=c.tilt-e:c.tilt<h&&(g=c.tilt-h);c=!1;0.01<Math.abs(g)&&(d.cross(k,a.up,y),m.identity(q),m.rotate(q,g,y),m.multiplyVec3(q,k),d.add(a.center,k,a.eye),m.multiplyVec3(q,a.up),c=!0);d.subtract(a.center,a.eye,r);g=a.distance;
h=this.limitAltitude(g,a.center,r,g);g!==h&&(d.scale(r,-h/g),d.add(a.center,r,a.eye),c=!0);this._autoUpdateTiltConstraint(e);return c},limitTiltByConstraints:function(a,b,c,h){if(!this.constraintsEnabled)return a;var e=this.constraints.tilt.min(c),d=this.constraints.tilt.max(c);if((void 0===h||0<h)&&a>=d)a=d;else if((void 0===h||0>h)&&a<=e)a=e;a=this.limitTiltByAltitudeConstraints(a,b,c,h);this._autoUpdateTiltConstraint(d);return a},_autoUpdateAltitudeConstraint:function(){var a=this._userConstraints&&
this._userConstraints.altitude;a&&"auto"===a.mode&&a.autoUpdate(this.constraints.altitude.min(this),this.constraints.altitude.max(this))},_autoUpdateTiltConstraint:function(a){var b=this._userConstraints&&this._userConstraints.tilt;void 0===a&&(a=this.constraints.tilt.max(this.cameras.target.distance));b&&"auto"===b.mode&&b.autoUpdate(p.rad2deg(a))},_disconnectUserConstraints:function(){if(this._userConstraints){this._userConstraintsHandles.forEach(function(a){a.remove()});this._userConstraints=null;
this._userConstraintsHandles.length=0;var a=this.mapUnitInMeters;this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,a);this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,a)}},_connectUserConstraints:function(a){a&&(this._userConstraints=a,this._userConstraintsHandles.push(n.init(a,"tilt.mode",this._tiltModeHandler),n.init(a,"clipDistance.mode",this._clipDistanceModeHandler),n.init(a,"altitude.mode",this._altitudeModeHandler),n.init(a,"collision.enabled",this._collisionEnabledHandler)))},
_camerasChanged:function(){this.targetChanged();this.currentChanged();this.currentHasReachedTarget()&&this.currentReachedTarget()},_reapplyConstraints:function(){var a=!1;this.applyConstraints(this.cameras.current)&&(a=!0);this.applyConstraints(this.cameras.target)&&(a=!0);a&&this._camerasChanged()},_userConstraintsChanged:function(){this._reapplyConstraints()},_altitudeMinMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltModeHandler:function(a){this._tiltHandles.forEach(function(a){a.remove()});
this._tiltHandles.length=0;"auto"===a?this.constraints.tilt=f.Tilt.scale(this.defaultConstraints.tilt,this.mapUnitInMeters):(this._tiltHandles.push(this._userConstraints.watch("tilt.max",this._tiltMaxHandler)),this.constraints.tilt=B(this._userConstraints));this._tiltMaxHandler()},_altitudeModeHandler:function(a){this._altitudeHandles.forEach(function(a){a.remove()});this._altitudeHandles.length=0;"auto"===a?(this.constraints.altitude=f.Altitude.scale(this.defaultConstraints.altitude,this.mapUnitInMeters),
this._autoUpdateAltitudeConstraint()):(this._altitudeHandles.push(this._userConstraints.watch("altitude.min",this._altitudeMinMaxHandler),this._userConstraints.watch("altitude.max",this._altitudeMinMaxHandler)),this.constraints.altitude=C(this._userConstraints));this._altitudeMinMaxHandler()},_collisionEnabledHandler:function(a,b,c){this.constraints.collision=new f.Collision(this._userConstraints.collision.enabled);this._userConstraintsChanged()},_clipDistanceNearFarHandler:function(a,b,c){"auto"!==
this._userConstraints.clipDistance.mode&&(this.cameras.target.near=this._userConstraints.clipDistance.near,this.cameras.target.far=this._userConstraints.clipDistance.far,this.cameras.current.near=this._userConstraints.clipDistance.near,this.cameras.current.far=this._userConstraints.clipDistance.far);this._camerasChanged()},_clipDistanceModeHandler:function(a){this._clipDistanceHandles.forEach(function(a){a.remove()});this._clipDistanceHandles.length=0;"auto"!==a&&this._clipDistanceHandles.push(this._userConstraints.watch(["clipDistance.near",
"clipDistance.far"],this._clipDistanceNearFarHandler));this._clipDistanceNearFarHandler()},_updateAutoNearFar:function(a){var b=this._userConstraints&&this._userConstraints.clipDistance;if(!(b&&"auto"!==b.mode)){var c=this.mapUnitInMeters,d=this.distanceToSilhouette(a,this.view.fullExtent,c,this._getTerrainElevationBelowCamera(a),H);a.far=d.distance/c;a.far/d.maxFarNearRatio>this.minNearDistance?a.near=a.far/d.maxFarNearRatio:(a.near=this.minNearDistance,a.far=a.near*d.maxFarNearRatio);b&&a===this.cameras.current&&
b.autoUpdate(a.near,a.far)}},constrainTargetEyeByElevation:function(a){if(!this.elevationProvider||!this.elevationProvider.spatialReference)return!1;var b=this.cameras.target;a&&this._targetCameraBeforeElevationUpdate.copyFrom(b);return this._applyTargetEyeElevationConstraint(b.eye,this._getTerrainElevationBelowCamera(b))},constrainTargetEyeByElevationAndMoveLookAt:function(){d.set(this.cameras.target.eye,t);this.constrainTargetEyeByElevation()&&(d.subtract(t,this.cameras.target.eye),d.subtract(this.cameras.target.center,
t))},targetChanged:function(a){this.inherited(arguments);this._targetCameraChangedByElevationUpdate=!1;this._updateAutoNearFar(this.cameras.target)},currentChanged:function(){this._updateAutoNearFar(this.cameras.current);this.inherited(arguments)},_applyTargetEyeElevationConstraint:function(a,b){if(!this.constraintsEnabled)return!1;var c=this.renderCoordsHelper,d=c.getAltitude(a);return this.constraints.collision.enabled&&d-b<this.cameraElevationMargin?(c.setAltitude(b+this.cameraElevationMargin,
a,0),!0):!1},_cameraElevationAngle:function(a,b){b=b||{tilt:0,distance:0};this.renderCoordsHelper.worldUpAtPosition(a.center,s);d.subtract(a.eye,a.center,k);var c=d.length(k),h=Math.acos(d.dot(k,s)/c/d.length(s));b.tilt=h;b.distance=c;return b},_elevationChangeTileHandler:function(a){if(this.enableElevationUpdates&&this._targetCameraChangedByElevationUpdate&&this.constraintsEnabled){var b=!1;a=a.tile.extent;var c=this.renderCoordsHelper.fromRenderCoords(this._targetCameraBeforeElevationUpdate.eye,
D,this.mapCoordsHelper.spatialReference);a[0]<c.x&&(a[1]<c.y&&a[2]>c.x&&a[3]>c.y)&&(E.copyFrom(this.cameras.target),this.cameras.target.copyFrom(this._targetCameraBeforeElevationUpdate),this.constrainTargetEyeByElevation(),b=!F.equals(this.cameras.target),b=this.applyConstraints(this.cameras.target)||b);b&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0)}},_elevationChangeHandler:function(a){if(this.enableElevationUpdates&&this.constraintsEnabled){var b=this.renderCoordsHelper,
c=this.mapCoordsHelper.spatialReference,d=this.cameras.target.eye,e=!1;a=a.extent;var g=b.fromRenderCoords(d,c);a[0]<g.x&&(a[1]<g.y&&a[2]>g.x&&a[3]>g.y)&&(this._targetCameraChangedByElevationUpdate||this._targetCameraBeforeElevationUpdate.copyFrom(this.cameras.target),e=this._applyTargetEyeElevationConstraint(d,this._getTerrainElevationBelowCamera(this.cameras.target)));e&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0);this._recomputeTargetCenterForElevationChange||(e=b.fromRenderCoords(this.cameras.target.center,
c),c=Math.max(e.x,g.x),d=Math.min(e.x,g.x),b=Math.max(e.y,g.y),g=Math.min(e.y,g.y),c=x.intersectIntervals([[d,c]],[[a[0],a[2]]]),a=x.intersectIntervals([[g,b]],[[a[1],a[3]]]),0<c.length&&0<a.length&&(this._recomputeTargetCenterForElevationChange=!0))}},_getTerrainElevationBelowCamera:function(a){if(!this.elevationProvider||!this.elevationProvider.spatialReference)this._terrainElevationBelowCamera=0;else if(null===this._terrainElevationBelowCamera||this._terrainElevationAtCameraEye!==a.eye){var b=
this.renderCoordsHelper.fromRenderCoords(a.eye,this.elevationProvider.spatialReference);this._terrainElevationBelowCamera=this.elevationProvider.getElevation(b)||0;this._terrainElevationAtCameraEye=a.eye}return this._terrainElevationBelowCamera},getCenterIntersectTerrain:function(a,b,c){c||(c=d.create());d.set(b,c);var f=this.picker.pickAlongRay(a,c);this.picker.pickedIntersectionPoint(f,c)||this.getCenterIntersectManifold(a,b,c)||this.getCenterIntersectTerrainFallback(a,b,c);return c},getCenterIntersectManifold:function(a,
b,c){d.subtract(b,a,c);return this.intersectManifold(a,c,0,c)},getCameraIntersectTerrain:function(a,b,c,f){var e=this.cameras.current.copy();a&&(e.eye=a);b&&(e.center=b);c&&(e.up=c);this.getCenterIntersectTerrain(e.eye,e.center,l);d.dist2(e.eye,l)<this.minPoiDist&&this.constraintsEnabled&&(d.scale(e.computeDirection(k),this.minPoiDist),d.subtract(l,k,e.eye),a=this.renderCoordsHelper,b=a.getAltitude(e.eye),this.constraints.collision.enabled&&b<this.cameraElevationMargin&&(d.subtract(l,e.eye,k),a.setAltitude(this.cameraElevationMargin,
e.eye),d.add(e.eye,k,l)),e.markViewDirty());0<f?(a=d.dist(e.eye,e.center),d.dist(l,e.center)>a*f&&(e.center=l)):e.center=l;return e}});f.Tilt=function(a){this.min=a.min;this.max=a.max};f.Tilt.scale=function(a,b){return 1===b?a:new f.Tilt({min:function(c){return a.min(c*b)},max:function(c){return a.max(c*b)}})};f.Tilt.prototype.apply=function(a,b){return p.clamp(a,this.min(b),this.max(b))};f.Altitude=function(a){this.min=a.min;this.max=a.max};f.Altitude.scale=function(a,b){return 1===b?a:new f.Altitude({min:function(c){return a.min(c)/
b},max:function(c){return a.max(c)/b}})};f.Altitude.prototype.apply=function(a,b){return p.clamp(b,this.min(a),this.max(a))};f.Collision=function(a){this.enabled=null!=a?a:!0};return f});